# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
    
      - name: Install Windows SDK
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          vs-version: '16.0'
          vswhere-path: 'C:\Program Files (x86)\Microsoft Visual Studio\2022\vswhere.exe'

      - name: Find Windows SDK version
        id: find-sdk-version
        run: |
          sdkVersion=$(C:/ProgramData/Chocolatey/bin/vswhere.exe -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationpath | Out-String).Trim()
          echo "::set-output name=sdk-version::$sdkVersion"
          
      - name: Add Windows SDK to PATH
        run: |
          # Get the Windows SDK installation path from the previous step
          $sdkPath = "${{ steps.find-sdk-version.outputs.sdk-version }}\\bin"
          echo "Adding $sdkPath to PATH"
          # Add the Windows SDK to the PATH environment variable
          $env:Path = "$sdkPath;$env:Path"
      
      - name: Add MSBuild to PATH
        run: |
          echo "Adding MSBuild to PATH"
          # Add MSBuild to the PATH environment variable
          $env:Path = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin;$env:Path"
      
      - name: Build
        working-directory: ./contrib
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
